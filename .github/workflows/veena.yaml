name: variables

on: [workflow_dispatch]

permissions:
  id-token: write
  contents: read

env:
    AZURE_FUNCTIONAPP_NAME: Ticketing-app
    AZURE_FUNCTIONAPP_PACKAGE_PATH: SN.IS.Devops.Ticketing.Functions
    AZURE_RESOURCEGROUP_NAME: rg-SNDevopsTicketing-cus
    AZURE_STORAGEACCOUNT_NAME: stSNDevopsTicketing
    AZURE_APPSERVICEPLAN_NAME: ASP-SNDevopsTicketing
    ENVIRONMENT: sandbox

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
    - name: 'Checkout GitHub Action'
      uses: actions/checkout@v2
    
    - name: 'az login'
      uses: azure/login@v1
      with:
        client-id: ${{ secrets.AZURE_CLIENT_ID }}
        tenant-id: ${{ secrets.AZURE_TENANT_ID }}
        subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
    
    - name: 'resource Group'
      uses: azure/arm-deploy@v1
      with:
        deploymentName: ${{ github.run_number }}
        resourceGroupName: ${{ env.AZURE_RESOURCEGROUP_NAME }}
        template: ./deploy/main.bicep
        parameters: environmentType=${{ env.ENVIRONMENT }}
        
    - name: 'storage account'
      uses: azure/arm-deploy@v1
      with:
        subscriptionId: ${{ secrets.AZURE_SUBSCRIPTION }}
        resourceGroupName: ${{ secrets.AZURE_RESOURCEGROUP_NAME }}
        template: ./main.bicep
        parameters: 'storagePrefix=AZURE_STORAGEACCOUNT_NAME storageSKU=Standard_LRS'
        failOnStdErr: false		
      
    - name: 'Function'
      uses: Azure/functions-action@v1
      with:
        app-name: ${{ env.AZURE_FUNCTIONAPP_NAME }}
        package: '${{ env.AZURE_FUNCTIONAPP_PACKAGE_PATH }}/output'
        publish-profile: ${{ secrets.AZURE_FUNCTIONAPP_PUBLISH_PROFILE }}
